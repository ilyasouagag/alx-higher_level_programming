>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix
[[1, 2, 3], [4, 5, 6]]

>>> matrix_divided([[4, 8, 12],[16, 20, 24]], 4)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]


>>> matrix_divided([[2.3, -4.2, 5.3],[4.3, 7.2, -3.7]] ,2)
[[1.15, -2.1, 2.65], [2.15, 3.6, -1.85]]

>>> matrix_divided([[-1.2, 3.3, 9],[-6.6,1.8,6]] ,3)
[[-0.4, 1.1, 3.0], [-2.2, 0.6, 2.0]]

>>> matrix_divided([[1, -2.5,10],[2,-5,7.5]] ,2.5)
[[0.4, -1.0, 4.0], [0.8, -2.0, 3.0]]

>>> matrix_divided([[1, 2, 3],None], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3],2.4], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3],10], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3],"ilyas"], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3],{1,10,3}], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3],(1,10,3)], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3],[1,{'ilyas' : 10, 'alaa': 10}]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3],{'ilyas' : 10, 'alaa': 10}], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3],[1,2,(4,5,6)]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3],[1,2,[4,5,6]]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3],[1,2,{4,5,6}]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3],[1,2,"ilyas"]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided("ilyas", 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(None, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(1, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([1, 2, 3], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[]], 2)
[[]]

>>> matrix_divided([[1, 2, 3],[4,5,6,7]], 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2, 3],[4,5,6],[7,8,9,10]], 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2, 3],[4,5,6]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[1, 2, 3],[4,5,6]], [1,2,3])
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3],[4,5,6]], None)
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3],[4,5,6]], "ilyas")
Traceback (most recent call last):
TypeError: div must be a number
